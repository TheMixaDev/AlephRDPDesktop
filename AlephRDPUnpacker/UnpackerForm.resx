<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>